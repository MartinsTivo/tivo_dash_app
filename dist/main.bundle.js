!function(e){var t={};function r(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(s,n,function(t){return e[t]}.bind(null,n));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=4)}([function(e,t){e.exports=require("electron")},function(e,t){e.exports=require("path")},function(e,t){e.exports=function(e){if("string"!=typeof e)return!1;var t=e.match(r);if(!t)return!1;var o=t[1];if(!o)return!1;if(s.test(o)||n.test(o))return!0;return!1};var r=/^(?:\w+:)?\/\/(\S+)$/,s=/^localhost[\:?\d]*(?:[^\:?\d]\S*)?$/,n=/^[^\s\.]+\.\S{2,}$/},function(e,t){e.exports=require("url")},function(e,t,r){"use strict";r.r(t);var s=r(0),n=r(1),o=r(3);r(5)();const a=r(14);if(!function(e){if(1===process.argv.length)return!1;const t=r(15),s=r(1),n=s.resolve(process.execPath,".."),o=s.resolve(n,".."),a=s.resolve(s.join(o,"Update.exe")),i=s.basename(process.execPath),p=function(e){return function(e,r){let s;try{s=t.spawn(e,r,{detached:!0})}catch(e){}return s}(a,e)};switch(process.argv[1]){case"--squirrel-install":case"--squirrel-updated":return p(["--createShortcut",i]),setTimeout(e.quit,1e3),!0;case"--squirrel-uninstall":return p(["--removeShortcut",i]),setTimeout(e.quit,1e3),!0;case"--squirrel-obsolete":return e.quit(),!0}}(s.app)){let e;function i(){(e=new s.BrowserWindow({height:800,width:800})).loadURL(o.format({pathname:n.join(__dirname,"./index.html"),protocol:"file:",slashes:!0})),e.on("closed",()=>{e=null})}if(s.app.on("ready",i),s.app.on("window-all-closed",()=>{"darwin"!=process.platform&&s.app.quit()}),s.app.on("activate",()=>{null===e&&i()}),a)console.log("Running in development");else{const e=`${"https://github.com/MartinsTivo/tivo_dash_app.git"}/update/${process.platform}/${s.app.getVersion()}`;s.autoUpdater.setFeedURL({url:e}),setInterval(()=>{s.autoUpdater.checkForUpdates()},6e4),s.autoUpdater.on("update-downloaded",(e,t,r)=>{const n={type:"info",buttons:["Restart","Later"],title:"Application Update",message:"win32"===process.platform?t:r,detail:"A new version has been downloaded. Restart the application to apply the updates."};s.dialog.showMessageBox(n,e=>{0===e&&s.autoUpdater.quitAndInstall()})}),s.autoUpdater.on("error",e=>{console.error("There was a problem updating the application"),console.error(e)})}}},function(e,t,r){const s=r(6),n=r(2),o=r(7),a=r(8),i=r(9),p=r(1),c=r(10),u=r(11),{format:l}=r(12),d=r(13),h=l("%s/%s (%s: %s)",d.name,d.version,u.platform(),u.arch()),f=["darwin","win32"];function m(e){const{host:t,repo:r,updateInterval:s,logger:n,electron:o}=e,{app:i,autoUpdater:p,dialog:c}=o,u=`${t}/${r}/${process.platform}-${process.arch}/${i.getVersion()}`,l={"User-Agent":h};function d(...e){n.log(...e)}"undefined"==typeof process||!process.platform||f.includes(process.platform)?(d("feedURL",u),d("requestHeaders",l),p.setFeedURL(u,l),p.on("error",e=>{d("updater error"),d(e)}),p.on("checking-for-update",()=>{d("checking-for-update")}),p.on("update-available",()=>{d("update-available; downloading...")}),p.on("update-not-available",()=>{d("update-not-available")}),e.notifyUser&&p.on("update-downloaded",(e,t,r,s,n)=>{d("update-downloaded",arguments);const o={type:"info",buttons:["Restart","Later"],title:"Application Update",message:"win32"===process.platform?t:r,detail:"A new version has been downloaded. Restart the application to apply the updates."};c.showMessageBox(o,e=>{0===e&&p.quitAndInstall()})}),p.checkForUpdates(),setInterval(()=>{p.checkForUpdates()},a(s))):d(`Electron's autoUpdater does not support the '${process.platform}' platform`)}e.exports=function(e={}){if(e=function(e){const t={host:"https://update.electronjs.org",updateInterval:"10 minutes",logger:console,notifyUser:!0},{host:o,updateInterval:u,logger:l,notifyUser:d}=Object.assign({},t,e),h=e.electron||r(0);let f=e.repo;if(!f){const e=c.readFileSync(p.join(h.app.getAppPath(),"package.json")),t=JSON.parse(e.toString()),r=t.repository&&t.repository.url||t.repository,n=i(r);s(n,"repo not found. Add repository string to your app's package.json file"),f=`${n.user}/${n.repo}`}return s(f&&f.length&&f.includes("/"),"repo is required and should be in the format `owner/repo`"),s(n(o)&&o.startsWith("https"),"host must be a valid HTTPS URL"),s("string"==typeof u&&u.match(/^\d+/),"updateInterval must be a human-friendly string interval like `20 minutes`"),s(a(u)>=3e5,"updateInterval must be `5 minutes` or more"),s(l&&typeof l.log,"function"),{host:o,repo:f,updateInterval:u,logger:l,electron:h,notifyUser:d}}(e),o){const t="update-electron-app config looks good; aborting updates since app is in development mode";e.logger?e.logger.log(t):console.log(t)}else e.electron.app.isReady()?m(e):e.electron.app.on("ready",()=>m(e))}},function(e,t){e.exports=require("assert")},function(e,t,r){"use strict";const s=1===parseInt(process.env.ELECTRON_IS_DEV,10),n="ELECTRON_IS_DEV"in process.env;e.exports=n?s:process.defaultApp||/node_modules[\\\/]electron[\\\/]/.test(process.execPath)},function(e,t){var r=1e3,s=60*r,n=60*s,o=24*n,a=7*o,i=365.25*o;function p(e,t,r,s){var n=t>=1.5*r;return Math.round(e/r)+" "+s+(n?"s":"")}e.exports=function(e,t){t=t||{};var c=typeof e;if("string"===c&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!t)return;var p=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return p*i;case"weeks":case"week":case"w":return p*a;case"days":case"day":case"d":return p*o;case"hours":case"hour":case"hrs":case"hr":case"h":return p*n;case"minutes":case"minute":case"mins":case"min":case"m":return p*s;case"seconds":case"second":case"secs":case"sec":case"s":return p*r;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return p;default:return}}(e);if("number"===c&&isFinite(e))return t.long?function(e){var t=Math.abs(e);if(t>=o)return p(e,t,o,"day");if(t>=n)return p(e,t,n,"hour");if(t>=s)return p(e,t,s,"minute");if(t>=r)return p(e,t,r,"second");return e+" ms"}(e):function(e){var t=Math.abs(e);if(t>=o)return Math.round(e/o)+"d";if(t>=n)return Math.round(e/n)+"h";if(t>=s)return Math.round(e/s)+"m";if(t>=r)return Math.round(e/r)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,t,r){"use strict";var s=r(2),n=/(?:(?:[^:]+:)?[\/][\/])?(?:.+@)?([^\/]+)([\/][^?#]+)/;e.exports=function(e,t){var r={};if(t=t||{},!e)return null;if(e.url&&(e=e.url),"string"!=typeof e)return null;var o=e.match(/^([\w-_]+)\/([\w-_\.]+)(?:#([\w-_\.]+))?$/),a=e.match(/^github:([\w-_]+)\/([\w-_\.]+)(?:#([\w-_\.]+))?$/),i=e.match(/^git@[\w-_\.]+:([\w-_]+)\/([\w-_\.]+)$/);if(o)r.user=o[1],r.repo=o[2],r.branch=o[3]||"master",r.host="github.com";else if(a)r.user=a[1],r.repo=a[2],r.branch=a[3]||"master",r.host="github.com";else if(i)r.user=i[1],r.repo=i[2].replace(/\.git$/i,""),r.branch="master",r.host="github.com";else{if(e=e.replace(/^git\+/,""),!s(e))return null;var p=e.match(n)||[],c=p[1],u=p[2];if(!c)return null;if("github.com"!==c&&"www.github.com"!==c&&!t.enterprise)return null;var l=u.match(/^\/([\w-_]+)\/([\w-_\.]+)(\/tree\/[\w-_\.\/]+)?(\/blob\/[\w-_\.\/]+)?/);if(!l)return null;r.user=l[1],r.repo=l[2].replace(/\.git$/i,""),r.host=c||"github.com",l[3]&&/^\/tree\/master\//.test(l[3])?(r.branch="master",r.path=l[3].replace(/\/$/,"")):l[3]?r.branch=l[3].replace(/^\/tree\//,"").match(/[\w-_.]+\/{0,1}[\w-_]+/)[0]:l[4]?r.branch=l[4].replace(/^\/blob\//,"").match(/[\w-_.]+\/{0,1}[\w-_]+/)[0]:r.branch="master"}return"github.com"===r.host?r.apiHost="api.github.com":r.apiHost=r.host+"/api/v3",r.tarball_url="https://"+r.apiHost+"/repos/"+r.user+"/"+r.repo+"/tarball/"+r.branch,r.clone_url="https://"+r.host+"/"+r.user+"/"+r.repo,"master"===r.branch?(r.https_url="https://"+r.host+"/"+r.user+"/"+r.repo,r.travis_url="https://travis-ci.org/"+r.user+"/"+r.repo,r.zip_url="https://"+r.host+"/"+r.user+"/"+r.repo+"/archive/master.zip"):(r.https_url="https://"+r.host+"/"+r.user+"/"+r.repo+"/blob/"+r.branch,r.travis_url="https://travis-ci.org/"+r.user+"/"+r.repo+"?branch="+r.branch,r.zip_url="https://"+r.host+"/"+r.user+"/"+r.repo+"/archive/"+r.branch+".zip"),r.path&&(r.https_url+=r.path),r.api_url="https://"+r.apiHost+"/repos/"+r.user+"/"+r.repo,r}},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("os")},function(e,t){e.exports=require("util")},function(e){e.exports=JSON.parse('{"_args":[["update-electron-app@1.5.0","C:\\\\Users\\\\martinstiltins\\\\Documents\\\\TIVO_Win"]],"_development":true,"_from":"update-electron-app@1.5.0","_id":"update-electron-app@1.5.0","_inBundle":false,"_integrity":"sha512-g7noW9JfQ8Hwq6zw9lmZei+R/ikOIBcaZ04TbmIcU5zNfv23HkN80QLLAyiR/47KvfS4sjnh2/wuDq5nh8+0mQ==","_location":"/update-electron-app","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"update-electron-app@1.5.0","name":"update-electron-app","escapedName":"update-electron-app","rawSpec":"1.5.0","saveSpec":null,"fetchSpec":"1.5.0"},"_requiredBy":["#DEV:/"],"_resolved":"https://registry.npmjs.org/update-electron-app/-/update-electron-app-1.5.0.tgz","_spec":"1.5.0","_where":"C:\\\\Users\\\\martinstiltins\\\\Documents\\\\TIVO_Win","bugs":{"url":"https://github.com/electron/update-electron-app/issues"},"dependencies":{"electron-is-dev":"^0.3.0","github-url-to-object":"^4.0.4","is-url":"^1.2.4","ms":"^2.1.1"},"description":"A drop-in module that adds autoUpdating capabilities to Electron apps","devDependencies":{"jest":"^22.4.3","semantic-release":"^15.13.12","standard":"^11.0.1","standard-markdown":"^5.0.1","travis-deploy-once":"^4.4.1","tslint":"^5.10.0","typescript":"^2.8.3"},"homepage":"https://github.com/electron/update-electron-app#readme","jest":{"testURL":"http://localhost"},"license":"MIT","main":"index.js","name":"update-electron-app","repository":{"type":"git","url":"git+https://github.com/electron/update-electron-app.git"},"scripts":{"lint":"tslint -c tslint.json index.d.ts","semantic-release":"semantic-release","test":"jest && standard --fix && npm run lint && standard-markdown","travis-deploy-once":"travis-deploy-once","watch":"jest --watch --notify --notifyMode=change --coverage"},"standard":{"env":{"jest":true}},"types":"index.d.ts","version":"1.5.0"}')},function(e,t,r){"use strict";const s=r(0),n=s.app||s.remote.app,o="ELECTRON_IS_DEV"in process.env,a=1===parseInt(process.env.ELECTRON_IS_DEV,10);e.exports=o?a:!n.isPackaged},function(e,t){e.exports=require("child_process")}]);